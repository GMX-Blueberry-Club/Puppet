specVersion: 0.0.5
description: gmx subgraph middlware for arbitrum-one
schema:
  file: ./schema.graphql
dataSources:

  # - kind: ethereum/contract
  #   name: transferGmx
  #   network: arbitrum-one
  #   source:
  #     address: "0xfc5A1A6EB076a2C7aD06eD22C90d7E710E35ad0a"
  #     abi: ERC20
  #     startBlock: 147903
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Transfer
  #     abis:
  #       - name: ERC20
  #         file: ./abis/ERC20.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleGmxTransfer
  #     file: ./src/arbitrum/reward.ts
  # - kind: ethereum/contract
  #   name: transferGlp
  #   network: arbitrum-one
  #   source:
  #     address: "0x4277f8f2c384827b5273592ff7cebd9f2c1ac258"
  #     abi: ERC20
  #     startBlock: 218168
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Transfer
  #     abis:
  #       - name: ERC20
  #         file: ./abis/ERC20.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleGlpTransfer
  #     file: ./src/arbitrum/reward.ts
  # - kind: ethereum/contract
  #   name: transferEsGmx
  #   network: arbitrum-one
  #   source:
  #     address: "0xf42Ae1D54fd613C9bb14810b0588FaAa09a426cA"
  #     abi: ERC20
  #     startBlock: 147904
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Transfer
  #     abis:
  #       - name: ERC20
  #         file: ./abis/ERC20.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleEsGmxTransfer
  #     file: ./src/arbitrum/reward.ts

  # - kind: ethereum/contract
  #   name: FeeGmxTrackerClaim
  #   network: arbitrum-one
  #   source:
  #     address: "0xd2D1162512F927a7e282Ef43a362659E4F2a728F"
  #     abi: RewardTracker
  #     startBlock: 147921
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Claim
  #     abis:
  #       - name: RewardTracker
  #         file: ./abis/RewardTracker.json
  #     eventHandlers:
  #       - event: Claim(address,uint256)
  #         handler: handleClaimFees
  #     file: ./src/arbitrum/reward.ts
  # - kind: ethereum/contract
  #   name: FeeGlpTrackerClaim
  #   network: arbitrum-one
  #   source:
  #     address: "0x4e971a87900b931fF39d1Aad67697F49835400b6"
  #     abi: RewardTracker
  #     startBlock: 218203
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Claim
  #     abis:
  #       - name: RewardTracker
  #         file: ./abis/RewardTracker.json
  #     eventHandlers:
  #       - event: Claim(address,uint256)
  #         handler: handleClaimFees
  #     file: ./src/arbitrum/reward.ts

  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorBTC
  #   network: arbitrum-one
  #   source:
  #     address: "0x942d00008D658dbB40745BBEc89A93c253f9B882"
  #     abi: ChainlinkAggregator
  #     startBlock: 101502
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedBTC
  #     file: ./src/arbitrum/tokenPrice.ts

  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorETH
  #   network: arbitrum-one
  #   source:
  #     address: "0x3607e46698d218B3a5Cae44bF381475C0a5e2ca7"
  #     abi: ChainlinkAggregator
  #     startBlock: 101486
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedETH
  #     file: ./src/arbitrum/tokenPrice.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregator
  #   network: arbitrum-one
  #   source:
  #     address: "0xeFc5061B7a8AeF31F789F1bA5b3b8256674F2B71"
  #     abi: ChainlinkAggregator
  #     startBlock: 226749
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedUNI
  #     file: ./src/arbitrum/tokenPrice.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorLINK
  #   network: arbitrum-one
  #   source:
  #     address: "0x9b8DdcF800a7BfCdEbaD6D65514dE59160a2C9CC"
  #     abi: ChainlinkAggregator
  #     startBlock: 101494
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedLINK
  #     file: ./src/arbitrum/tokenPrice.ts

  # - kind: ethereum/contract
  #   name: FastPriceFeed
  #   network: arbitrum-one
  #   source:
  #     address: "0x4530b7DE1958270A2376be192a24175D795e1b07"
  #     abi: FastPriceEvents
  #     startBlock: 3716732
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - PriceUpdate
  #     abis:
  #       - name: FastPriceEvents
  #         file: ./abis/FastPriceEvents.json
  #     eventHandlers:
  #       - event: PriceUpdate(address,uint256,address)
  #         handler: handleFastPriceEvent
  #     file: ./src/arbitrum/tokenPrice.ts
 
  # - kind: ethereum/contract
  #   name: GmxPrice
  #   network: arbitrum-one
  #   source:
  #     address: "0x80A9ae39310abf666A87C743d6ebBD0E8C42158E"
  #     abi: UniswapPoolV3
  #     startBlock: 227335
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Pricefeed
  #     abis:
  #       - name: UniswapPoolV3
  #         file: ./abis/UniswapPoolV3.json
  #     eventHandlers:
  #       - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
  #         handler: handleUniswapGmxEthSwap
  #     file: ./src/arbitrum/tokenPrice.ts

  # - kind: ethereum/contract
  #   name: GlpManager
  #   network: arbitrum-one
  #   source:
  #     address: "0x321F653eED006AD1C29D174e17d96351BDe22649"
  #     abi: GlpManager
  #     startBlock: 227115
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Pricefeed
  #     abis:
  #       - name: GlpManager
  #         file: ./abis/GlpManager.json
  #     eventHandlers:
  #       - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
  #         handler: handleAddLiquidity
  #       - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
  #         handler: handleRemoveLiquidity
  #     file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum
    name: PositionRouter
    network: arbitrum-one
    source:
      address: "0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868"
      abi: PositionRouter
      startBlock: 103044446
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Callback
        - CreateDecreasePosition
        - CreateIncreasePosition
        - ExecuteDecreasePosition
        - ExecuteDecreasePosition
      abis:
        - name: PositionRouter
          file: ./abis/PositionRouter.json
      eventHandlers:
        - event: CreateDecreasePosition(indexed
            address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateDecreasePosition
        - event: CreateIncreasePosition(indexed
            address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateIncreasePosition
        - event: ExecuteDecreasePosition(indexed
            address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleExecuteDecreasePosition
        - event: ExecuteIncreasePosition(indexed
            address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256)
          handler: handleExecuteIncreasePosition
      file: ./src/positionRouter.ts
  - kind: ethereum
    name: Vault
    network: arbitrum-one
    source:
      address: "0x489ee077994b6658eafa855c308275ead8097c4a"
      abi: Vault
      startBlock: 103044446
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - ClosePosition
        - DecreasePosition
        - IncreasePoolAmount
        - IncreasePosition
        - LiquidatePosition
        - Swap
        - UpdatePosition
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: VaultPricefeed
          file: ./abis/VaultPricefeed.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
          handler: handleSwap
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleUpdatePosition
      file: ./src/vault.ts


