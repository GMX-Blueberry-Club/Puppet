specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: EventEmitter
    network: arbitrum-one
    source:
      address: "0xC8ee91A54287DB53897056e12D9819156D3822Fb"
      abi: EventEmitter
      startBlock: 164892446
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - EventLog
        - EventLog1
        - EventLog2
      abis:
        - name: EventEmitter
          file: ./abis/EventEmitter.json
      eventHandlers:
        # - event: EventLog(address,string,indexed string,(((string,address)[],(string,address[])[]),((string,uint256)[],(string,uint256[])[]),((string,int256)[],(string,int256[])[]),((string,bool)[],(string,bool[])[]),((string,bytes32)[],(string,bytes32[])[]),((string,bytes)[],(string,bytes[])[]),((string,string)[],(string,string[])[])))
        #   handler: handleEventLog
        - event: EventLog1(address,string,indexed string,indexed bytes32,(((string,address)[],(string,address[])[]),((string,uint256)[],(string,uint256[])[]),((string,int256)[],(string,int256[])[]),((string,bool)[],(string,bool[])[]),((string,bytes32)[],(string,bytes32[])[]),((string,bytes)[],(string,bytes[])[]),((string,string)[],(string,string[])[])))
          handler: handleEventLog1
        - event: EventLog2(address,string,indexed string,indexed bytes32,indexed bytes32,(((string,address)[],(string,address[])[]),((string,uint256)[],(string,uint256[])[]),((string,int256)[],(string,int256[])[]),((string,bool)[],(string,bool[])[]),((string,bytes32)[],(string,bytes32[])[]),((string,bytes)[],(string,bytes[])[]),((string,string)[],(string,string[])[])))
          handler: handleEventLog2
      file: ./src/event-emitter.ts

  - kind: ethereum
    name: Orchestrator
    network: arbitrum-one
    source:
      address: "0x92100ed7c156887D173880572718971E9d7B585E"
      abi: Orchestrator
      startBlock: 164892446
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - AdjustPosition
        - Deposit
        - ExecutePosition
        - Initialize
        - OpenPosition
        - SetRouteType
        - SharesIncrease
        - SubscribeRoute
        - Withdraw

        # - LiquidatePosition
        # - TransferRouteFunds
        # - AdjustTargetLeverage
        # - AuthorityUpdated
        # - CreditPlatform
        # - CreditPuppet
        # - DebitPuppet
        # - OwnershipTransferred
        # - Pause
        # - RegisterRouteAccount
        # - RescueRouteFunds
        # - SetFees
        # - SetFeesRecipient
        # - SetThrottleLimit
        # - UpdateKeeper
        # - UpdateMultiSubscriber
        # - UpdateOpenTimestamp
        # - UpdateReferralCode
        # - UpdateRouteFactory
        # - UpdateScoreGauge
        # - WithdrawPlatformFees


      abis:
        - name: Orchestrator
          file: ./abis/Orchestrator.json
      eventHandlers:
        # - event: AdjustPosition(indexed address,indexed address,bool,bytes32,bytes32,bytes32)
        #   handler: handleAdjustPosition
        # - event: AdjustTargetLeverage(indexed address,bytes32,bytes32,bytes32)
        #   handler: handleAdjustTargetLeverage
        # - event: AuthorityUpdated(indexed address,indexed address)
        #   handler: handleAuthorityUpdated
        # - event: CreditPlatform(uint256,address,address,address,bool)
        #   handler: handleCreditPlatform
        # - event: CreditPuppet(uint256,address,indexed address,indexed address)
        #   handler: handleCreditPuppet
        # - event: DebitPuppet(uint256,address,indexed address,indexed address)
        #   handler: handleDebitPuppet
        - event: Deposit(uint256,address,address,indexed address)
          handler: handleDeposit
        - event: Withdraw(uint256,address,indexed address,indexed address)
          handler: handleWithdraw
        - event: ExecutePosition(uint256,indexed address,bytes32,bool,bool)
          handler: handleExecutePosition
        # - event: Initialize(address,address,address,address,address)
        #   handler: handleInitialize
        # - event: LiquidatePosition(indexed address,bytes32,bytes32)
        #   handler: handleLiquidatePosition
        - event: OpenPosition(address[],indexed address,indexed address,bool,bytes32,bytes32,bytes32)
          handler: handleOpenPosition
        # - event: OwnershipTransferred(indexed address,indexed address)
        #   handler: handleOwnershipTransferred
        # - event: Pause(bool)
        #   handler: handlePause
        # - event: RegisterRouteAccount(indexed address,indexed address,bytes32)
        #   handler: handleRegisterRouteAccount
        # - event: RescueRouteFunds(uint256,address,indexed address,indexed address)
        #   handler: handleRescueRouteFunds
        # - event: SetFees(uint256,uint256,uint256)
        #   handler: handleSetFees
        # - event: SetFeesRecipient(address)
        #   handler: handleSetFeesRecipient
        - event: SetRouteType(bytes32,address,address,bool,bytes)
          handler: handleSetRouteType
        # - event: SetThrottleLimit(indexed address,bytes32,uint256)
        #   handler: handleSetThrottleLimit
        - event: SharesIncrease(uint256[],uint256,uint256,address,bytes32)
          handler: handleSharesIncrease
        - event: SubscribeRoute(uint256,uint256,indexed address,indexed address,indexed address,bool,bytes32)
          handler: handleSubscribeRoute
        # - event: TransferRouteFunds(uint256,address,indexed address,indexed address)
        #   handler: handleTransferRouteFunds
        # - event: UpdateKeeper(address)
        #   handler: handleUpdateKeeper
        # - event: UpdateMultiSubscriber(address)
        #   handler: handleUpdateMultiSubscriber
        # - event: UpdateOpenTimestamp(address[],bytes32)
        #   handler: handleUpdateOpenTimestamp
        # - event: UpdateReferralCode(bytes32)
        #   handler: handleUpdateReferralCode
        # - event: UpdateRouteFactory(address)
        #   handler: handleUpdateRouteFactory
        # - event: UpdateScoreGauge(address)
        #   handler: handleUpdateScoreGauge

        # - event: WithdrawPlatformFees(uint256,address,address,address)
        #   handler: handleWithdrawPlatformFees
      file: ./src/puppet.ts
