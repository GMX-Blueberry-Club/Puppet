# Start with Alpine Linux
FROM alpine:3.18 as base
WORKDIR /usr/src/app

# Install necessary packages for Bun and Chromium
RUN apk upgrade --no-cache --available \
    && apk add --no-cache \
      curl \
      bash \
      chromium-swiftshader \
      harfbuzz \
      "freetype>2.10.4" \
      ttf-freefont \
      nss \
      gcompat \
    && apk add --no-cache \
      --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community \
      font-wqy-zenhei

# Add Chrome as a user
RUN adduser -D chrome

# Set environment variables for headless Chrome
ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/lib/chromium/ \
    CHROMIUM_FLAGS="--disable-software-rasterizer --disable-dev-shm-usage"

# Switch to the chrome user
USER chrome

# Install Bun as the chrome user
RUN curl -fsSL https://bun.sh/install | bash -s "bun-v1.0.18"

# Add Bun to PATH for the chrome user
ENV PATH="/home/chrome/.bun/bin:$PATH"

# Verify that Bun is installed and in the PATH
RUN bun --version

# Set environment variables for headless Chrome
ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/lib/chromium/ \
    CHROMIUM_FLAGS="--disable-software-rasterizer --disable-dev-shm-usage"

# Create necessary directories and set permissions
RUN mkdir -p /usr/src/app /temp/dev /temp/prod \
    && chown -R chrome:chrome /usr/src/app /temp

# Switch to the chrome user
USER chrome

# Set the working directory to the app directory
WORKDIR /usr/src/app

# Copy package.json and bun.lockb files to the container
COPY --chown=chrome:chrome package.json bun.lockb ./

# Install dependencies
RUN bun install --frozen-lockfile

# Copy the rest of the application files to the container
COPY --chown=chrome:chrome . .

# Set the environment to production
ENV NODE_ENV=production

# Expose the port the app runs on
EXPOSE 3000/tcp

# Set the entrypoint to run the app using Bun
ENTRYPOINT ["bun", "run", "index.ts"]